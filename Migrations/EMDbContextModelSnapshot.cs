// <auto-generated />
using System;
using EM_WebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EM_WebApp.Migrations
{
    [DbContext(typeof(EMDbContext))]
    partial class EMDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EM_WebApp.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OfficeLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8D3BC019C");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D10534C4244EE5")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("EM_WebApp.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1CAE2AFF9");

                    b.HasIndex(new[] { "Email" }, "UQ__Employee__A9D105348606BD73")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("EM_WebApp.Models.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FacilityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OperatingHours")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("FacilityId")
                        .HasName("PK__Faciliti__5FB08B941DC4447E");

                    b.HasIndex("CustomerId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("EM_WebApp.Models.FacilityMaintenance", b =>
                {
                    b.Property<int>("FacilityMaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FacilityMaintenanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityMaintenanceId"));

                    b.Property<DateOnly>("MaintenanceDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("NextDueDate")
                        .HasColumnType("date")
                        .HasColumnName("nextDueDate");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.HasKey("FacilityMaintenanceId")
                        .HasName("PK__Facility__E5B47FA38C304BAB");

                    b.HasIndex("ProjectId");

                    b.ToTable("FacilityMaintenance", (string)null);
                });

            modelBuilder.Entity("EM_WebApp.Models.JobCard", b =>
                {
                    b.Property<int>("JobCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobCardID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobCardId"));

                    b.Property<DateOnly?>("CompletionDate")
                        .HasColumnType("date")
                        .HasColumnName("completionDate");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("JobStart")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.HasKey("JobCardId")
                        .HasName("PK__JobCards__98F41DDFF326E5FD");

                    b.HasIndex("ProjectId");

                    b.ToTable("JobCards");
                });

            modelBuilder.Entity("EM_WebApp.Models.JobCardTeam", b =>
                {
                    b.Property<int>("JobCardTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobCardTeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobCardTeamId"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int>("JobCardId")
                        .HasColumnType("int")
                        .HasColumnName("JobCardID");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("JobCardTeamId")
                        .HasName("PK__JobCardT__B7EE4120A952F92D");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("JobCardId");

                    b.ToTable("JobCardTeams");
                });

            modelBuilder.Entity("EM_WebApp.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("NotificationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ScheduledSendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E32AAC30952");

                    b.HasIndex("CustomerId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("EM_WebApp.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("amountPaid");

                    b.Property<DateOnly>("PaymentDate")
                        .HasColumnType("date");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A5862BD5648");

                    b.HasIndex("ProjectId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EM_WebApp.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("endDate");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int")
                        .HasColumnName("FacilityID");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paymentStatus");

                    b.Property<string>("ProgressStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("startDate");

                    b.Property<DateOnly>("SurveyDate")
                        .HasColumnType("date")
                        .HasColumnName("surveyDate");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("totalCost");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ProjectId")
                        .HasName("PK__Project__761ABED092E37056");

                    b.HasIndex("FacilityId");

                    b.HasIndex("UserId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("EM_WebApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("isDeleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACFA2D544A");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534B9E269DF")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EM_WebApp.Models.Facility", b =>
                {
                    b.HasOne("EM_WebApp.Models.Customer", "Customer")
                        .WithMany("Facilities")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Facilitie__Custo__5EBF139D");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EM_WebApp.Models.FacilityMaintenance", b =>
                {
                    b.HasOne("EM_WebApp.Models.Project", "Project")
                        .WithMany("FacilityMaintenances")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__FacilityM__Proje__778AC167");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EM_WebApp.Models.JobCard", b =>
                {
                    b.HasOne("EM_WebApp.Models.Project", "Project")
                        .WithMany("JobCards")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__JobCards__Projec__6E01572D");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EM_WebApp.Models.JobCardTeam", b =>
                {
                    b.HasOne("EM_WebApp.Models.Employee", "Employee")
                        .WithMany("JobCardTeams")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__JobCardTe__Emplo__74AE54BC");

                    b.HasOne("EM_WebApp.Models.JobCard", "JobCard")
                        .WithMany("JobCardTeams")
                        .HasForeignKey("JobCardId")
                        .IsRequired()
                        .HasConstraintName("FK__JobCardTe__JobCa__73BA3083");

                    b.Navigation("Employee");

                    b.Navigation("JobCard");
                });

            modelBuilder.Entity("EM_WebApp.Models.Notification", b =>
                {
                    b.HasOne("EM_WebApp.Models.Customer", "Customer")
                        .WithMany("Notifications")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__Custo__6B24EA82");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EM_WebApp.Models.Payment", b =>
                {
                    b.HasOne("EM_WebApp.Models.Project", "Project")
                        .WithMany("Payments")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Projec__656C112C");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EM_WebApp.Models.Project", b =>
                {
                    b.HasOne("EM_WebApp.Models.Facility", "Facility")
                        .WithMany("Projects")
                        .HasForeignKey("FacilityId")
                        .IsRequired()
                        .HasConstraintName("FK__Project__Facilit__619B8048");

                    b.HasOne("EM_WebApp.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Project__UserID__628FA481");

                    b.Navigation("Facility");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EM_WebApp.Models.Customer", b =>
                {
                    b.Navigation("Facilities");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("EM_WebApp.Models.Employee", b =>
                {
                    b.Navigation("JobCardTeams");
                });

            modelBuilder.Entity("EM_WebApp.Models.Facility", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EM_WebApp.Models.JobCard", b =>
                {
                    b.Navigation("JobCardTeams");
                });

            modelBuilder.Entity("EM_WebApp.Models.Project", b =>
                {
                    b.Navigation("FacilityMaintenances");

                    b.Navigation("JobCards");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EM_WebApp.Models.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
